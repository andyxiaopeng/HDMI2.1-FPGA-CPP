`timescale 1ns/100ps
module gf256mul(
      input [7:0] a,
      input [7:0] b,
      output [7:0] z
      );
// 基本可以判断为按照中北大学论文的乘法因子矩阵进行设计的乘法器 ，刘梦欣硕士论文的3.1.3章节有乘法器相关内容

// 补充，但是这个应该还是没有最终优化，最终可以进行同类项合并，得到一个最终的矩阵，从而使得这个乘法器没有那么多 按位与操作 和 异或操作 

assign z[0] = a[0]&b[0] ^ a[7]&b[1] ^ a[1]&b[7] ^ a[6]&b[2] ^ a[2]&b[6] ^ a[5]&b[3] ^ a[3]&b[5] ^
              a[4]&b[4] ^ a[7]&b[5] ^ a[5]&b[7] ^ a[6]&b[6] ^ a[7]&b[6] ^ a[6]&b[7] ^ a[7]&b[7] ;

assign z[1] = a[1]&b[0] ^ a[0]&b[1] ^ a[7]&b[2] ^ a[2]&b[7] ^ a[6]&b[3] ^ a[3]&b[6] ^ a[5]&b[4] ^
              a[4]&b[5] ^ a[7]&b[6] ^ a[6]&b[7] ^ a[7]&b[7] ;

assign z[2] = a[2]&b[0] ^ a[0]&b[2] ^ a[1]&b[1] ^ a[7]&b[1] ^ a[1]&b[7] ^ a[6]&b[2] ^ a[2]&b[6] ^
              a[5]&b[3] ^ a[3]&b[5] ^ a[4]&b[4] ^ a[7]&b[3] ^ a[3]&b[7] ^ a[6]&b[4] ^ a[4]&b[6] ^
              a[5]&b[5] ^ a[7]&b[5] ^ a[5]&b[7] ^ a[6]&b[6] ^ a[7]&b[6] ^ a[6]&b[7] ;
 
assign z[3] = a[3]&b[0] ^ a[0]&b[3] ^ a[2]&b[1] ^ a[1]&b[2] ^ a[7]&b[1] ^ a[1]&b[7] ^ a[6]&b[2] ^ a[2]&b[6] ^
              a[5]&b[3] ^ a[3]&b[5] ^ a[4]&b[4] ^ a[7]&b[2] ^ a[2]&b[7] ^ a[6]&b[3] ^ a[3]&b[6] ^ a[5]&b[4] ^
              a[4]&b[5] ^ a[7]&b[4] ^ a[4]&b[7] ^ a[6]&b[5] ^ a[5]&b[6] ^ a[7]&b[5] ^ a[5]&b[7] ^ a[6]&b[6] ;
 
assign z[4] = a[4]&b[0] ^ a[0]&b[4] ^ a[3]&b[1] ^ a[1]&b[3] ^ a[2]&b[2] ^ a[7]&b[1] ^ a[1]&b[7] ^ a[6]&b[2] ^
              a[2]&b[6] ^ a[5]&b[3] ^ a[3]&b[5] ^ a[4]&b[4] ^ a[7]&b[2] ^ a[2]&b[7] ^ a[6]&b[3] ^ a[3]&b[6] ^
              a[5]&b[4] ^ a[4]&b[5] ^ a[7]&b[3] ^ a[3]&b[7] ^ a[6]&b[4] ^ a[4]&b[6] ^ a[5]&b[5] ^ a[7]&b[7] ;
 
assign z[5] = a[5]&b[0] ^ a[0]&b[5] ^ a[4]&b[1] ^ a[1]&b[4] ^ a[3]&b[2] ^ a[2]&b[3] ^ a[7]&b[2] ^
              a[2]&b[7] ^ a[6]&b[3] ^ a[3]&b[6] ^ a[5]&b[4] ^ a[4]&b[5] ^ a[7]&b[3] ^ a[3]&b[7] ^
              a[6]&b[4] ^ a[4]&b[6] ^ a[5]&b[5] ^ a[7]&b[4] ^ a[4]&b[7] ^ a[6]&b[5] ^ a[5]&b[6] ;
 
assign z[6] = a[6]&b[0] ^ a[0]&b[6] ^ a[5]&b[1] ^ a[1]&b[5] ^ a[4]&b[2] ^ a[2]&b[4] ^ a[3]&b[3] ^
              a[7]&b[3] ^ a[3]&b[7] ^ a[6]&b[4] ^ a[4]&b[6] ^ a[5]&b[5] ^ a[7]&b[4] ^ a[4]&b[7] ^
              a[6]&b[5] ^ a[5]&b[6] ^ a[7]&b[5] ^ a[5]&b[7] ^ a[6]&b[6] ;
 
assign z[7] = a[7]&b[0] ^ a[0]&b[7] ^ a[6]&b[1] ^ a[1]&b[6] ^ a[5]&b[2] ^ a[2]&b[5] ^ a[4]&b[3] ^
              a[3]&b[4] ^ a[7]&b[4] ^ a[4]&b[7] ^ a[6]&b[5] ^ a[5]&b[6] ^ a[7]&b[5] ^ a[5]&b[7] ^
              a[6]&b[6] ^ a[7]&b[6] ^ a[6]&b[7] ;

endmodule